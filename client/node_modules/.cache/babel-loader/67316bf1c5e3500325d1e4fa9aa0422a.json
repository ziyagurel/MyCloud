{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ziyag\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\MyCloud\\\\client\\\\src\\\\components\\\\Form\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const updatedPost = useSelector(state => currentId ? state.posts.find(p => p._id == currentId) : null); //geri çağırma için curruntId dolu ise ilgili id verileri bulur.\n\n  useEffect(() => {\n    //geri çağırmanın ne zaman olacağını belirler.\n    if (updatedPost) setPostData(updatedPost);\n  }, [updatedPost]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (currentId) {\n      dispatch(updatePost(currentId, postData));\n    } else {\n      dispatch(createPost(postData));\n    }\n  };\n\n  const clear = () => {\n    setCurrentId(null);\n    setPostData({\n      creator: '',\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [\" \", currentId ? 'Editing' : 'Creating', \" a Memory\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"creator\",\n        variant: \"outlined\",\n        label: \"Creator\",\n        fullWidth: true,\n        value: postData.creator,\n        onChange: e => setPostData({ ...postData,\n          creator: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: ({\n            base64\n          }) => setPostData({ ...postData,\n            selectedFile: base64\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"63680+tb8XDmcE8/3+WWGUUihEg=\", false, function () {\n  return [useStyles, useDispatch, useSelector];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/ziyag/OneDrive/Masaüstü/MyCloud/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","FileBase","useDispatch","useSelector","useStyles","createPost","updatePost","Form","currentId","setCurrentId","classes","dispatch","postData","setPostData","creator","title","message","tags","selectedFile","updatedPost","state","posts","find","p","_id","handleSubmit","e","preventDefault","clear","paper","root","form","target","value","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\r\nimport FileBase from 'react-file-base64';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport useStyles from './styles';\r\nimport {createPost, updatePost} from '../../actions/posts';\r\n\r\nconst Form = ({currentId, setCurrentId}) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const [postData, setPostData] = useState({ creator: '', title: '', message:'', tags: '', selectedFile: '', });\r\n    const updatedPost = useSelector((state) => currentId ? state.posts.find((p) => p._id == currentId) : null ); //geri çağırma için curruntId dolu ise ilgili id verileri bulur.\r\n\r\n    useEffect(() =>{\r\n        //geri çağırmanın ne zaman olacağını belirler.\r\n        if(updatedPost) setPostData(updatedPost);\r\n    }, [updatedPost])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(currentId){\r\n            dispatch(updatePost(currentId, postData));\r\n        } else {\r\n            dispatch(createPost(postData));\r\n        }\r\n    }\r\n\r\n    const clear = () => {\r\n        setCurrentId(null);\r\n        setPostData({creator: '', title: '', message:'', tags: '', selectedFile: ''})\r\n    }\r\n    \r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n                <Typography variant=\"h6\"> {currentId ? 'Editing' : 'Creating'} a Memory</Typography>\r\n                <TextField name =\"creator\" variant =\"outlined\" label = \"Creator\" fullWidth value = {postData.creator} onChange = {(e) => setPostData({ ... postData, creator: e.target.value})} />\r\n                <TextField name =\"title\" variant =\"outlined\" label = \"Title\" fullWidth value = {postData.title} onChange = {(e) => setPostData({ ... postData, title: e.target.value})} />\r\n                <TextField name =\"message\" variant =\"outlined\" label = \"Message\" fullWidth value = {postData.message} onChange = {(e) => setPostData({ ... postData, message: e.target.value})} />\r\n                <TextField name =\"tags\" variant =\"outlined\" label = \"Tags\" fullWidth value = {postData.tags} onChange = {(e) => setPostData({ ... postData, tags: e.target.value})} />\r\n                <div className={classes.fileInput}>\r\n                    <FileBase type = \"file\" multiple = {false} onDone = {({base64}) => setPostData({ ... postData, selectedFile: base64})}/>\r\n                </div>\r\n                <Button className = {classes.buttonSubmit} variant = \"contained\" color = \"primary\" size = \"large\" type = \"submit\" fullWidth>Submit</Button>\r\n                <Button variant = \"contained\" color = \"secondary\" size = \"small\" onClick = {clear} fullWidth>Clear</Button>\r\n            </form>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}